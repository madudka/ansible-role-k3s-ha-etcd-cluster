---
- name: Update cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install curl
  ansible.builtin.apt:
    name: curl
    state: present

- name: Install k3s on the first server
  ansible.builtin.shell: |
    curl -sfL {{ k3s_install_url }} | sh -s - server --cluster-init --tls-san={{ fixed_ip }}
  when: "'master' in group_names and inventory_hostname == groups['master'][0]"

- name: Get K3S_TOKEN from the first server
  ansible.builtin.command: cat {{ k3s_node_token_path }}
  register: k3s_token
  when: "'master' in group_names and inventory_hostname == groups['master'][0]"

- name: Set variable for other hosts
  set_fact:
    k3s_token_value: "{{ k3s_token.stdout }}"
  delegate_to: localhost
  when: "'master' in group_names and inventory_hostname == groups['master'][0]"

- name: Set k3s_token_value as fact on k3s hosts
  set_fact:
    k3s_token_value: "{{ hostvars[groups['master'][0]].k3s_token_value }}"
  when: "'k3s' in group_names"

- name: Install k3s server on other servers
  ansible.builtin.shell: |
    curl -sfL {{ k3s_install_url }} | sh -s - server --server https://{{ groups['master'][0] }}:6443 --tls-san={{ fixed_ip }}
  environment:
    K3S_TOKEN: "{{ k3s_token_value }}"
  when: "'master' in group_names and inventory_hostname != groups['master'][0]"

- name: Install k3s agents
  ansible.builtin.shell: |
    curl -sfL {{ k3s_install_url }} | sh -s - agent --server https://{{ groups['master'][0] }}:6443
  environment:
    K3S_TOKEN: "{{ k3s_token_value }}"
  when: "'worker' in group_names"